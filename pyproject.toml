[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hatch-aws-publisher"
version = "0.2.0"
description = 'Hatch plugin for deploying to AWS with SAM'
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE.txt" }
keywords = ["hatch", "aws", "plugin", "sam", "lambda"]
authors = [{ name = "aka-raccoon", email = "aka-raccoon@pm.me" }]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Framework :: Hatch",
]
dependencies = ["hatch"]

[project.entry-points.hatch]
aws = "hatch_aws_publisher.hooks"

[project.urls]
Documentation = "https://github.com/aka-raccoon/hatch-aws-publishery#readme"
Issues = "https://github.com/aka-raccoon/hatch-aws-publisher/issues"
Source = "https://github.com/aka-raccoon/hatch-aws-publisher"

[project.optional-dependencies]
dev = ["isort", "black", "pylint", "mypy", "bandit[toml]"]
test = ["coverage", "pytest", "pytest-cov", "pytest-mock"]

[tool.coverage.run]
branch = true
parallel = true
source = ["hatch_aws_publisher"]
omit = ["src/hatch_aws_publisher/hooks.py"]

[tool.coverage.report]
show_missing = true
skip_covered = false

[tool.hatch.envs.default]
features = ["dev", "test"]

[tool.hatch.envs.default.scripts]
check = [
  "pylint src/",
  "black --check --diff src/",
  "isort --check-only --diff src/",
  "mypy src/",
  "bandit -r --configfile pyproject.toml src/",
]
fix = ["black src/", "isort src/"]

[tool.hatch.envs.test]
features = ["test"]

[tool.hatch.envs.cz]
dependencies = ["commitizen"]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10"]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.pylint.messages_control]
disable = [
  "missing-module-docstring",
  "missing-class-docstring",
  "missing-function-docstring",
]

[tool.pylint.format]
max-line-length = 100

[tool.bandit]
exclude_dirs = ["tests/"]

[tool.mypy]
namespace_packages = true
ignore_missing_imports = true
explicit_package_bases = true
warn_return_any = false
warn_unused_configs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "serial",
]
filterwarnings = ["ignore:.*are deprecated.*:Warning"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.0"
version_files = ["pyproject.toml:^version"]
tag_format = "$version"
bump_message = "bump: $current_version â†’ $new_version"

[tool.hatch.build]
exclude = [".github", "tests", ".editorconfig"]
sources = ["src"]
